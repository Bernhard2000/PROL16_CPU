; ### Assemblerprogram to add two 16 bit unsigned numbers ###


; ### Data ###
ORG 08000h					; define address to store initial data in it
DB 5						; loop x times
ORG 0000h					; reset address for programm code

; ### Constants ###
EQU startAddress, 08000h

; ### Code ###
LOADI R6, startAddress				; load start address of data section of RAM  into R6

:start:						; this is a Jump-label --> with >>>LOADI R3, start;   JUMP R3<<< you can jump back to this position
LOADI R3, loop_start             ;
LOADI R2, end               ;
LOAD R0, R6					; load first number into R0
:loop_start:                ;
DEC R0                      ;
JUMPZ R2                    ;
JUMP R3                     ;
:end:                       ;
INC R6						; increment address counter
STORE R0, R6					; store result in RAM (Adress: 08001h)
LOADI R3, startAddress				; dump memory snapshot in hex file
LOADI R4, 0FFFFh
STORE R3, R4
SLEEP						; end simulation with sleep command
